name: Run Tests

on:
  push:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  golang-build:
    name: Building golang
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use golang
        uses: actions/setup-go@v5

      - name: Install dependencies
        run: |
          set -xe
          go get .

      - name: Build
        run: |
          set -xe
          make build/go

  golang-test:
    name: Testing golang
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use golang
        uses: actions/setup-go@v5

      - name: Install dependencies
        run: |
          set -xe
          make install/go

      - name: Test
        run: |
          set -xe
          make test/go

  python-build:
    name: Building python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          set -xe
          make install/python

      - name: Build
        run: |
          set -xe
          make build/python

  python-test:
    name: "Test python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"

    continue-on-error: ${{ startsWith(matrix.python-version, '~') }} # Allows unstable Python versions to fail

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.x"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          set -xe
          make install/python

      - name: Test with pytest
        run: |
          set -xe
          make test/python

  check:
    if: always()
    name: Tests Successful
    runs-on: ubuntu-latest
    needs: [golang-test, golang-build, python-test, python-build]

    steps:
      - name: Whether the whole test suite passed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
